/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
       classpath "gradle.plugin.org.jamgo:eclipselink-plugin:0.2.2"
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'org.nosphere.apache.rat' version '0.6.0'
    id 'com.jfrog.artifactory' version '4.15.1'
    //id "org.jamgo.eclipselink-plugin" version "0.2.2"
    id 'maven-publish'
    id 'idea'
    id 'java'
}

group 'org.apache.fineract.cn'
version 'spring_boot_2-SNAPSHOT'

ext.versions = [
        springcontext: '5.2.5.RELEASE',
        springboot   : '2.2.6.RELEASE',
        findbugs     : '3.0.2',
        frameworklang: 'spring_boot_2-SNAPSHOT',
        bonecp       : '0.8.0.RELEASE',
        flyway       : '6.3.3',
        postgresql   : '42.2.5',
        eclipselink  : '2.7.9',
]

apply plugin: "org.jamgo.eclipselink-plugin"

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    jcenter()
    mavenLocal()
    maven { url System.getenv("ARTIFACTORY_URL") }
}

dependencies {
    compile(
            [group: 'org.springframework', name: 'spring-context', version: versions.springcontext],
            [group: 'com.google.code.findbugs', name: 'jsr305', version: versions.findbugs],
            [group: 'org.apache.fineract.cn', name: 'lang', version: versions.frameworklang],
            [group: 'com.jolbox', name: 'bonecp', version: versions.bonecp],
            [group: 'org.flywaydb', name: 'flyway-core', version: versions.flyway],
            [group: 'org.postgresql', name: 'postgresql', version: versions.postgresql],
            [group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa', version: versions.eclipselink]
    )
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springboot)
            {
                exclude group: 'org.hibernate', module: 'hibernate-entitymanager'
                exclude group: 'org.hibernate', module: 'hibernate-core'
            }
    testCompile(
            [group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springboot]
    )
}

jar {
    from sourceSets.main.allSource
}

publishing {
    publications {
        postgresqlPublication(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.findProperty('externalVersion') ?: project.version
        }
    }
}

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_URL_PUBLISH")
    publish {
        repository {
            repoKey = System.getenv("ARTIFACTORY_REPOKEY")
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASSWORD")
        }

        defaults {
            publications('postgresqlPublication')
        }
    }
}
artifactoryPublish.dependsOn('clean', 'publishToMavenLocal')

license {
    header rootProject.file('HEADER')
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

rat {
    // List of exclude directives, defaults to ['**/.gradle/**']
    excludes = [
            ".idea/**",
            ".gradle/**",
            "gradle/**",
            "build/**",
            "gradlew",
            "gradlew.bat",
            "README.md",
            ".project",
            "**/.settings/**",
            ".classpath",
            "**/bin/**"
    ]
}

